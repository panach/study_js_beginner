Article Title
서버&클라이언트 post&get 방식
WEB 2012/07/29 20:12
 
웹 서버는 클라이언트로부터 요청을 받아, 요청한 것을 넘겨주는 일을 한다.

웹 클라이언트는 사용자가 서버에 요청을 보낼 수 있는 기능을 제공한다. 요청을 보내고 난 다음, 서버가 요청의 결과를 화면에 출력하는 일도 클라이언트의 역할이다.

HTTP 프로토콜 : TCP / IP를 기반으로 하여, TCP/IP를 이용해서 한 지점에서 다른 지점으로 요청과 응답을 전송한다.

요청의 주요 구성 요소

HTTP 메서드 (실행할 액션을 말한다.), 접근하고자하는 페이지(URL), 폼 파라미터

TCP : 한쪽 노드에서 다른 쪽 노드로 파일을 보내는 놈.

IP : 한 호스트에서 목적지 호스트까지 패킷을 옮기고 이동하기 위한 기반(베이스) 프로토콜이다.



http://www.cafe.naver.com:80/yang/sky82e.html

1 2 3 4 5


1 : 프로토콜 ( 서버와 대화하기 위하여 사용하는커뮤니케이션 프로토콜)

2 : 서버 ( 이 이름은 IP주소와 매핑됨)

3 : 포트 : URL의 옵션

4 : 서비스 자원의 위치

5 : 자원 : 요청한 컨텐츠의 이름



TCP 포트

FTP : 21 / TELNET : 23 / SMTP : 25 / Time : 37

HTTP : 80 / POP3 : 110 / HTTS : 443


GET 방식과 POST 방식의 차이점은 전송 방식에 있다.

폼 테스트의 예제의 경우

GET 방식은 요청 URL에 파라미터를 붙여서 전송한다.

<form action="Parameter.jsp" method="get"> 로 전송했을 경우 아래와 같이 주소가 나온다.

 

위와 같이 URL의 뒤 부분에 물음표(?)와 함께 파라미터를 붙여서 전송하는데, 파라미터를 전송하는 형식은 아래와 같다.

?이름1=값&이름2=값&....%이름N=값N

웹 브라우저, 웹 서버 또는 웹 컨테이너에 따라 전송할 수 있는 파라미터 값의 길이에 제한이 있다.

POST 방식의 경우

<form action="Parameter.jsp" method="post"> 로 전송했을 경우 아래와 같이 주소가 나온다.

데이터 영역을 이용해서 데이터를 전송하기 때문에 웹 브라우저나 웹 서버 등에 상관없이 전송할 수 있는 파라미터의 길이에 제한이 없다.